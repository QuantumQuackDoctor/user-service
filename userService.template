AWSTemplateFormatVersion: 2010-09-09
Description: "user service template for use with jenkins"
Parameters:
  ImageURL:
    Type: String
  BaseStackName:
    Type: String

Resources:
  UserServiceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 3
      LogGroupName: UserServiceGroup
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - ecs.amazonaws.com
                - ecs-tasks.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
        - "arn:aws:iam::aws:policy/AmazonECS_FullAccess"
      Policies:
        - PolicyName: AccessECR
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:BatchGetImage"
                  - "ecr:GetAuthorizationToken"
                  - "ecr:GetDownloadUrlForLayer"
                Resource: "*"
        - PolicyName: AccessSES
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "ses:SendEmail"
                  - "ses:SendTemplatedEmail"
                  - "ses:SendRawEmail"
                  - "ses:SendBulkTemplatedEmail"
                Resource: "*"
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: UserDefinition
          Cpu: 512
          Memory: 1024
          Image: !Ref ImageURL
          PortMappings:
            - ContainerPort: 8080
              HostPort: 8080
              Protocol: tcp
          Environment:
            - Name: SPRING_APPLCIATION_JSON
              Value: !Join
                - ""
                - - '{"spring":{"datasource":{"url":"jdbc:postgresql://'
                  - Fn::ImportValue: !Sub "${BaseStackName}-DBEndpoint"
                  - ":"
                  - Fn::ImportValue: !Sub "${BaseStackName}-DBPort"
                  - "/"
                  - Fn::ImportValue: !Sub "${BaseStackName}-DBName"
                  - '","username":"'
                  - "{{resolve:secretsmanager:DBUsername}}"
                  - '","password":"'
                  - "{{resolve:secretsmanager:DBPassword}}"
                  - '"}},"jwt":{"secret":"SECRET"},"server":{"port":"8080"}}'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref UserServiceLogGroup
              awslogs-steream-previx: US-
              awslogs-region: !Ref "AWS::Region"
      Cpu: 512
      Memory: 1024
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !GetAtt TaskRole.Arn
      ExecutionRoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole"
  ServiceDefinition:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Fn::ImportValue: !Sub "${BaseStackName}-ECSClusterName"
      LaunchType: FARGATE
      DesiredCount: 1
      ServiceName: UserService
      LoadBalancers:
        - ContainerName: UserDefinition
          ContainerPort: 8080
          TargetGroupArn:
            Fn::ImportValue: !Sub "${BaseStackName}-UserTGArn"
      TaskDefinition: !Ref TaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - Fn::ImportValue: !Sub "${BaseStackName}-ServiceSecurityGroup"
          Subnets:
            - Fn::ImportValue: !Sub "${BaseStackName}-PrivateSubnet1"
            - Fn::ImportValue: !Sub "${BaseStackName}-PrivateSubnet2"
